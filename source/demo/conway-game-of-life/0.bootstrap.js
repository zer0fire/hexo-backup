(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "../pkg/wasm_game_of_life.js":
/*!***********************************!*\
  !*** ../pkg/wasm_game_of_life.js ***!
  \***********************************/
/*! exports provided: __wbg_set_wasm, Cell, Universe, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wasm_game_of_life_bg.wasm */ \"../pkg/wasm_game_of_life_bg.wasm\");\n/* harmony import */ var _wasm_game_of_life_bg_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./wasm_game_of_life_bg.js */ \"../pkg/wasm_game_of_life_bg.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_set_wasm\", function() { return _wasm_game_of_life_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_set_wasm\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Cell\", function() { return _wasm_game_of_life_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"Cell\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Universe\", function() { return _wasm_game_of_life_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"Universe\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return _wasm_game_of_life_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_throw\"]; });\n\n\n\nObject(_wasm_game_of_life_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_set_wasm\"])(_wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\n//# sourceURL=webpack:///../pkg/wasm_game_of_life.js?");

/***/ }),

/***/ "../pkg/wasm_game_of_life_bg.js":
/*!**************************************!*\
  !*** ../pkg/wasm_game_of_life_bg.js ***!
  \**************************************/
/*! exports provided: __wbg_set_wasm, Cell, Universe, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_set_wasm\", function() { return __wbg_set_wasm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Cell\", function() { return Cell; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Universe\", function() { return Universe; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\nlet wasm;\nfunction __wbg_set_wasm(val) {\n    wasm = val;\n}\n\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n/**\n*/\nconst Cell = Object.freeze({ Dead:0,\"0\":\"Dead\",Alive:1,\"1\":\"Alive\", });\n/**\n*/\nclass Universe {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Universe.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_universe_free(ptr);\n    }\n    /**\n    */\n    tick() {\n        wasm.universe_tick(this.__wbg_ptr);\n    }\n    /**\n    * @param {number} width\n    * @param {number} height\n    * @returns {Universe}\n    */\n    static new(width, height) {\n        const ret = wasm.universe_new(width, height);\n        return Universe.__wrap(ret);\n    }\n    /**\n    * @returns {string}\n    */\n    render() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.universe_render(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n    /**\n    * @returns {number}\n    */\n    width() {\n        const ret = wasm.universe_width(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} width\n    */\n    set_width(width) {\n        wasm.universe_set_width(this.__wbg_ptr, width);\n    }\n    /**\n    * @returns {number}\n    */\n    height() {\n        const ret = wasm.universe_height(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} height\n    */\n    set_height(height) {\n        wasm.universe_set_height(this.__wbg_ptr, height);\n    }\n    /**\n    * @returns {number}\n    */\n    cells() {\n        const ret = wasm.universe_cells(this.__wbg_ptr);\n        return ret;\n    }\n}\n\nfunction __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../www/node_modules/.pnpm/webpack@4.47.0_webpack-cli@3.3.12/node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/.pnpm/webpack@4.47.0_webpack-cli@3.3.12/node_modules/webpack/buildin/harmony-module.js\")(module)))\n\n//# sourceURL=webpack:///../pkg/wasm_game_of_life_bg.js?");

/***/ }),

/***/ "../pkg/wasm_game_of_life_bg.wasm":
/*!****************************************!*\
  !*** ../pkg/wasm_game_of_life_bg.wasm ***!
  \****************************************/
/*! exports provided: memory, __wbg_universe_free, universe_tick, universe_new, universe_render, universe_width, universe_set_width, universe_height, universe_set_height, universe_cells, __wbindgen_add_to_stack_pointer, __wbindgen_free */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./wasm_game_of_life_bg.js */ \"../pkg/wasm_game_of_life_bg.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../pkg/wasm_game_of_life_bg.wasm?");

/***/ }),

/***/ "./node_modules/.pnpm/webpack@4.47.0_webpack-cli@3.3.12/node_modules/webpack/buildin/harmony-module.js":
/*!*******************************************!*\
  !*** (webpack)/buildin/harmony-module.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack:///(webpack)/buildin/harmony-module.js?");

/***/ }),

/***/ "./src/collectAvg.js":
/*!***************************!*\
  !*** ./src/collectAvg.js ***!
  \***************************/
/*! exports provided: Collect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Collect\", function() { return Collect; });\nclass Collect {\n    constructor(head) {\n        this.head = head\n        this.timeStartList = []\n        this.timeEndList = []\n        this.min = Infinity\n        this.max = -Infinity\n    }\n\n     collectAvrTime() {\n      if (this.timeStartList.length >= 50) {\n        return;\n      }\n      this.timeStartList.push(Date.now())\n    }\n     collectAvrTimeEnd(callback) {\n      if (this.timeEndList.length >= 50) {\n        const avg = this.timeEndList.reduce((res, endTime, idx) => {\n          res += endTime - this.timeStartList[idx]\n          return res\n        }, 0) / 50\n        if (avg > this.max) {\n          this.max = avg\n        }\n        if (avg < this.min) {\n          this.min = avg\n        }\n        // console.log(`${this.head} \\n average ${avg}ms \\n max ${this.max}ms \\n min ${this.min}ms`)\n        callback(`${this.head} \\n average ${avg}ms \\n max ${this.max}ms \\n min ${this.min}ms`)\n        this.timeEndList.length = 0\n        this.timeStartList.length = 0\n        return\n      }\n      this.timeEndList.push(Date.now())\n    }\n}\n\n\n\n//# sourceURL=webpack:///./src/collectAvg.js?");

/***/ }),

/***/ "./src/fps.js":
/*!********************!*\
  !*** ./src/fps.js ***!
  \********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Message; });\nclass Message {\n  constructor(dom) {\n    this.dom = dom\n    this.frames = [];\n    this.lastFrameTimeStamp = performance.now();\n  }\n\n  render(message) {\n    // Convert the delta time since the last frame render into a measure\n    // of frames per second.\n    if (message) {\n      this.dom.textContent = message.trim();\n      return\n    }\n    const now = performance.now();\n    const delta = now - this.lastFrameTimeStamp;\n    this.lastFrameTimeStamp = now;\n    const fps = (1 / delta) * 1000;\n\n    // Save only the latest 100 timings.\n    this.frames.push(fps);\n    if (this.frames.length > 100) {\n      this.frames.shift();\n    }\n\n    // Find the max, min, and mean of our 100 latest timings.\n    let min = Infinity;\n    let max = -Infinity;\n    let sum = 0;\n    for (let i = 0; i < this.frames.length; i++) {\n      sum += this.frames[i];\n      min = Math.min(this.frames[i], min);\n      max = Math.max(this.frames[i], max);\n    }\n    let mean = sum / this.frames.length;\n\n    // Render the statistics.\n      this.dom.textContent = `\n      Frames per Second:\n               latest = ${Math.round(fps)}\n      avg of last 100 = ${Math.round(mean)}\n      min of last 100 = ${Math.round(min)}\n      max of last 100 = ${Math.round(max)}\n      `.trim();\n  }\n}\n\n\n//# sourceURL=webpack:///./src/fps.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _wasmCanvasDraw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wasmCanvasDraw */ \"./src/wasmCanvasDraw.js\");\n/* harmony import */ var _originCanvasDraw__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./originCanvasDraw */ \"./src/originCanvasDraw.js\");\n\n\n\nconst size = 312;\n\nObject(_wasmCanvasDraw__WEBPACK_IMPORTED_MODULE_0__[\"conway\"])(size, size);\nObject(_originCanvasDraw__WEBPACK_IMPORTED_MODULE_1__[\"conway\"])(size, size);\n\ndocument.querySelector(\".message1\").style.fontSize = `${parseInt(size / 10)}px`;\ndocument.querySelector(\".message2\").style.fontSize = `${parseInt(size / 10)}px`;\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/originCanvasDraw.js":
/*!*********************************!*\
  !*** ./src/originCanvasDraw.js ***!
  \*********************************/
/*! exports provided: conway */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conway\", function() { return conway; });\n/* harmony import */ var _collectAvg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./collectAvg */ \"./src/collectAvg.js\");\n/* harmony import */ var _fps__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fps */ \"./src/fps.js\");\n\n\n\nconst Cell = {\n  Dead: 0,\n  Alive: 1,\n};\n\nclass Universe {\n  constructor(width, height) {\n    this.height = height;\n    this.width = width;\n    this.cells = new Array(width * height).fill(0).map((_, _i) => {\n      if (_i % 2 == 0 || _i % 5 == 0) {\n        return Cell.Alive;\n      } else {\n        return Cell.Dead;\n      }\n      // if (Math.random() < 0.5) {\n      //   return Cell.Alive;\n      // } else {\n      //   return Cell.Dead;\n      // }\n    });\n  }\n  getIndex(row, col) {\n    return this.width * row + col;\n  }\n  liveNeighborCount(row, col) {\n    let count = 0;\n    for (let deltaRow of [this.height - 1, 0, 1]) {\n      for (let deltaCol of [this.width - 1, 0, 1]) {\n        if (deltaRow === 0 && deltaCol === 0) {\n          continue;\n        }\n        let neighborRow = (row + deltaRow) % this.height;\n        let neighborCol = (col + deltaCol) % this.width;\n        let idx = this.getIndex(neighborRow, neighborCol);\n        count += this.cells[idx];\n      }\n    }\n    return count;\n  }\n  tick() {\n    let next = [];\n    for (let row = 0; row < this.height; row++) {\n      for (let col = 0; col < this.width; col++) {\n        let idx = this.getIndex(row, col);\n        let cell = this.cells[idx];\n        let liveNeighbor = this.liveNeighborCount(row, col);\n        // 规则 1：任何 Alive 细胞如果少于 2 个 Alive 的邻居，会转为 Dead，因为人口不足\n        // 规则 2：任何 Alive 细胞有 2 到 3 个 Alive 的邻居，会生存到下一代\n        // 规则 3：任何 Alive 细胞，有超过 3 个 Alive 的邻居，会转为 Dead，因为人口过剩\n        // 规则 4：任何 Dead 细胞，有正好 3 个 Alive 的邻居，会转为 Alive，因为繁殖\n        let nextCell = Cell.Dead;\n        if (cell === Cell.Alive && liveNeighbor < 2) {\n          nextCell = Cell.Dead;\n        } else if (\n          cell === Cell.Alive &&\n          (liveNeighbor === 2 || liveNeighbor === 3)\n        ) {\n          nextCell = Cell.Alive;\n        } else if (cell === Cell.Alive && liveNeighbor > 3) {\n          nextCell = Cell.Dead;\n        } else if (cell === Cell.Dead && liveNeighbor === 3) {\n          nextCell = Cell.Alive;\n        }\n        next[idx] = nextCell;\n      }\n    }\n    this.cells = next;\n  }\n  render() {\n    return this.cells.join(\"\");\n  }\n}\n\nfunction conway(originW = 6, originH = 6) {\n  const CELL_SIZE = 1;\n  const GRID_COLOR = \"#CCCCCC\";\n  // const DEAD_COLOR = \"#FFFFFF\";\n  const ALIVE_COLOR = \"#000000\";\n\n  const universe = new Universe(originW, originH);\n  const width = universe.width;\n  const height = universe.height;\n\n  const canvas = document.getElementById(\"origin-canvas\");\n  const fps = new _fps__WEBPACK_IMPORTED_MODULE_1__[\"default\"](document.querySelector('.message1'));\n  let ctx = null;\n\n  if (canvas) {\n    canvas.height = (CELL_SIZE + 1) * height + 1;\n    canvas.width = (CELL_SIZE + 1) * width + 1;\n    ctx = canvas.getContext(\"2d\");\n  }\n\n  // function drawGrid() {\n  //   if (!ctx) return;\n  //   ctx.beginPath();\n  //   ctx.strokeStyle = GRID_COLOR;\n\n  //   // Vertical lines.\n  //   for (let i = 0; i <= width; i++) {\n  //     ctx.moveTo(i * (CELL_SIZE + 1) + 1, 0);\n  //     ctx.lineTo(i * (CELL_SIZE + 1) + 1, (CELL_SIZE + 1) * height + 1);\n  //   }\n\n  //   // Horizontal lines.\n  //   for (let j = 0; j <= height; j++) {\n  //     ctx.moveTo(0, j * (CELL_SIZE + 1) + 1);\n  //     ctx.lineTo((CELL_SIZE + 1) * width + 1, j * (CELL_SIZE + 1) + 1);\n  //   }\n\n  //   ctx.stroke();\n  // }\n\n  function getIndex(row, column) {\n    return row * width + column;\n  }\n\n  function drawCells() {\n    const cells = universe.cells;\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\n    ctx.beginPath();\n\n    // Alive cells.\n    ctx.fillStyle = ALIVE_COLOR;\n    for (let row = 0; row < height; row++) {\n      for (let col = 0; col < width; col++) {\n        const idx = getIndex(row, col);\n        if (cells[idx] !== Cell.Alive) {\n          continue;\n        }\n\n        ctx.rect(\n          col * (CELL_SIZE + 1) + 1,\n          row * (CELL_SIZE + 1) + 1,\n          CELL_SIZE,\n          CELL_SIZE\n        );\n      }\n    }\n    ctx.fill();\n  }\n\n  const collect = new _collectAvg__WEBPACK_IMPORTED_MODULE_0__[\"Collect\"]('js')\n\n  function renderLoop() {\n    // fps.render();\n\n    collect.collectAvrTime();\n    universe.tick();\n    collect.collectAvrTimeEnd(fps.render.bind(fps));\n\n    // drawGrid();\n    drawCells();\n    requestAnimationFrame(renderLoop);\n  }\n  renderLoop();\n}\n\n\n//# sourceURL=webpack:///./src/originCanvasDraw.js?");

/***/ }),

/***/ "./src/wasmCanvasDraw.js":
/*!*******************************!*\
  !*** ./src/wasmCanvasDraw.js ***!
  \*******************************/
/*! exports provided: conway */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conway\", function() { return conway; });\n/* harmony import */ var _pkg_wasm_game_of_life__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../pkg/wasm_game_of_life */ \"../pkg/wasm_game_of_life.js\");\n/* harmony import */ var _pkg_wasm_game_of_life_bg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../pkg/wasm_game_of_life_bg */ \"../pkg/wasm_game_of_life_bg.wasm\");\n/* harmony import */ var _collectAvg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./collectAvg */ \"./src/collectAvg.js\");\n/* harmony import */ var _fps__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fps */ \"./src/fps.js\");\n\n\n\n\n\nfunction conway(originW = 1000, originH = 1000) {\n  const CELL_SIZE = 1;\n  const GRID_COLOR = \"#CCCCCC\";\n  // const DEAD_COLOR = \"#FFFFFF\";\n  const ALIVE_COLOR = \"#000000\";\n\n  const universe = _pkg_wasm_game_of_life__WEBPACK_IMPORTED_MODULE_0__[\"Universe\"].new(originW, originH);\n  const width = universe.width();\n  const height = universe.height();\n\n  const fps = new _fps__WEBPACK_IMPORTED_MODULE_3__[\"default\"](document.querySelector('.message2'));\n  const canvas = document.getElementById(\"wasm-canvas\");\n\n  canvas.height = (CELL_SIZE + 1) * height + 1;\n  canvas.width = (CELL_SIZE + 1) * width + 1;\n  const ctx = canvas.getContext(\"2d\");\n\n  function drawGrid() {\n    ctx.beginPath();\n    ctx.strokeStyle = GRID_COLOR;\n\n    // Vertical lines.\n    for (let i = 0; i <= width; i++) {\n      ctx.moveTo(i * (CELL_SIZE + 1) + 1, 0);\n      ctx.lineTo(i * (CELL_SIZE + 1) + 1, (CELL_SIZE + 1) * height + 1);\n    }\n\n    // Horizontal lines.\n    for (let j = 0; j <= height; j++) {\n      ctx.moveTo(0, j * (CELL_SIZE + 1) + 1);\n      ctx.lineTo((CELL_SIZE + 1) * width + 1, j * (CELL_SIZE + 1) + 1);\n    }\n\n    ctx.stroke();\n  }\n\n  function getIndex(row, column) {\n    return row * width + column;\n  }\n\n  function drawCells() {\n    const cellsPtr = universe.cells();\n    const cells = new Uint8Array(_pkg_wasm_game_of_life_bg__WEBPACK_IMPORTED_MODULE_1__[\"memory\"].buffer, cellsPtr, width * height);\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\n    ctx.beginPath();\n\n    // Alive cells.\n    ctx.fillStyle = ALIVE_COLOR;\n    for (let row = 0; row < height; row++) {\n      for (let col = 0; col < width; col++) {\n        const idx = getIndex(row, col);\n        if (cells[idx] !== _pkg_wasm_game_of_life__WEBPACK_IMPORTED_MODULE_0__[\"Cell\"].Alive) {\n          continue;\n        }\n\n        ctx.rect(\n          col * (CELL_SIZE + 1) + 1,\n          row * (CELL_SIZE + 1) + 1,\n          CELL_SIZE,\n          CELL_SIZE\n        );\n      }\n    }\n    ctx.fill();\n\n    // Dead cells.\n    // ctx.fillStyle = DEAD_COLOR;\n    // for (let row = 0; row < height; row++) {\n    //   for (let col = 0; col < width; col++) {\n    //     const idx = getIndex(row, col);\n    //     if (cells[idx] !== Cell.Dead) {\n    //       continue;\n    //     }\n\n    //     ctx.rect(\n    //       col * (CELL_SIZE + 1) + 1,\n    //       row * (CELL_SIZE + 1) + 1,\n    //       CELL_SIZE,\n    //       CELL_SIZE\n    //     );\n    //   }\n    // }\n\n    // ctx.fill();\n  }\n\n  const collect = new _collectAvg__WEBPACK_IMPORTED_MODULE_2__[\"Collect\"]('wasm')\n\n  function renderLoop() {\n    // fps.render();\n\n    collect.collectAvrTime()\n    universe.tick();\n    collect.collectAvrTimeEnd(fps.render.bind(fps))\n\n    // drawGrid();\n    drawCells();\n\n    requestAnimationFrame(renderLoop);\n  }\n  renderLoop();\n}\n\n\n//# sourceURL=webpack:///./src/wasmCanvasDraw.js?");

/***/ })

}]);